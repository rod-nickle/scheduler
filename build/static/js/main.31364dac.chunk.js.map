{"version":3,"sources":["helpers/selectors.js","reducers/application.js","hooks/useApplicationData.js","hooks/useRealtimeUpdate.js","components/DayListItem.js","components/DayList.js","components/Appointment/Header.js","components/Appointment/Empty.js","components/Appointment/Show.js","components/InterviewerListItem.js","components/InterviewerList.js","components/Button.js","components/Appointment/Form.js","components/Appointment/Status.js","components/Appointment/Error.js","components/Appointment/Confirm.js","components/Appointment/index.js","hooks/useVisualMode.js","components/Application.js","index.js"],"names":["getInterview","state","interview","_objectSpread","interviewer","interviewers","reducer","action","type","day","days","appointments","appointment","id","getSpotsForDay","length","reduce","count","map","includes","spots","Error","concat","useApplicationData","dispatch","useReducer","useEffect","Promise","all","axios","get","then","_ref","data","socket","WebSocket","process","onmessage","event","JSON","parse","close","useRealTimeUpdate","setDay","bookInterview","put","cancelInterview","delete","DayListItem","props","dayClass","classnames","selected","React","createElement","className","onClick","name","data-testid","number","DayList","key","Header","time","Empty","src","alt","onAdd","Show","student","onEdit","onDelete","InterviewerItem","itemClass","setInterviewer","avatar","InterviewerList","InterviewerListItem","value","onChange","Button","buttonClass","danger","confirm","disabled","children","Form","setName","useState","error","setError","autoComplete","onSubmit","preventDefault","placeholder","target","onCancel","onSave","Status","message","onClose","Confirm","onConfirm","Appointment","initialMode","mode","transition","back","initial","history","setHistory","newMode","replace","arguments","undefined","prev","slice","useVisualMode","save","catch","Application","found","find","d","getInterviewersForDay","getAppointmentsForDay","Object","assign","REACT_APP_API_BASE_URL","defaults","baseURL","ReactDOM","render","document","getElementById"],"mappings":"yVAgBO,SAASA,EAAaC,EAAOC,GAClC,OACEA,GAASC,wBAAA,GACJD,GAAS,IACZE,YAAaH,EAAMI,aAAaH,EAAUE,e,oBChBjC,SAASE,EAAQL,EAAOM,GACrC,OAAQA,EAAOC,MACb,IANmB,UAOjB,OAAAL,wBAAA,GAAYF,GAAK,IAAEQ,IAAKF,EAAOE,MACjC,IAPgC,uBAQ9B,OAAAN,wBAAA,GACKF,GAAK,IACRS,KAAMH,EAAOG,KACbC,aAAcJ,EAAOI,aACrBN,aAAcE,EAAOF,eAEzB,IAbyB,gBAaL,CAClB,MAAMO,EAAWT,wBAAA,GACZF,EAAMU,aAAaJ,EAAOM,KAAG,IAChCX,UAAWK,EAAOL,WAASC,YAAA,GAASI,EAAOL,aAGvCS,EAAYR,wBAAA,GACbF,EAAMU,cAAY,IACrB,CAACJ,EAAOM,IAAKD,IAGTE,EAAiBL,GACrBA,EAAIE,aAAaI,OACjBN,EAAIE,aAAaK,OACf,CAACC,EAAOJ,IAAQF,EAAaE,GAAIX,UAAYe,EAAQ,EAAIA,EACzD,GAGEP,EAAOT,EAAMS,KAAKQ,IAAIT,GACnBA,EAAIE,aAAaQ,SAASZ,EAAOM,IAAGV,wBAAA,GAElCM,GAAG,IACNW,MAAON,EAAeL,KAExBA,GAGN,OAAAN,wBAAA,GACKF,GAAK,IACRU,eACAD,SAGJ,QACE,MAAM,IAAIW,MAAM,iDAADC,OACoCf,EAAOC,QCtCjD,SAASe,IACtB,MAAOtB,EAAOuB,GAAYC,qBAAWnB,EAAS,CAC5CG,IAAK,SACLC,KAAM,GACNC,aAAc,GACdN,aAAc,KA2ChB,OAtCAqB,oBAAU,KACRC,QAAQC,IAAI,CACVC,IAAMC,IAAI,aACVD,IAAMC,IAAI,qBACVD,IAAMC,IAAI,uBACTC,KACDC,IAAA,KAAIC,KAAMvB,IAAUuB,KAAMtB,IAAkBsB,KAAM5B,IAAe2B,EAAA,OAC/DR,EAAS,CACPhB,KD7B0B,uBC8B1BE,OACAC,eACAN,oBAGL,ICjCU,SAA2BmB,GACxCE,oBAAU,KACR,MAAMQ,EAAS,IAAIC,UAAUC,uBAU7B,OARAF,EAAOG,UAAYC,IACjB,MAAML,EAAOM,KAAKC,MAAMF,EAAML,MAEV,kBAATA,GFRY,kBEQSA,EAAKzB,MACnCgB,EAASS,IAIN,KACLC,EAAOO,UAER,CAACjB,IDoBJkB,CAAkBlB,GAsBX,CACLvB,QACA0C,OA1CalC,GAAOe,EAAS,CAAEhB,KDpBZ,UCoB2BC,QA2C9CmC,cAvBF,SAAuB/B,EAAIX,GACzB,OAAO2B,IAAMgB,IAAI,qBAADvB,OAAsBT,GAAM,CAAEX,cAAa6B,KAAK,KAC9DP,EAAS,CACPhB,KDzCqB,gBC0CrBK,KACAX,iBAmBJ4C,gBAdF,SAAyBjC,GACvB,OAAOgB,IAAMkB,OAAO,qBAADzB,OAAsBT,IAAMkB,KAAK,KAClDP,EAAS,CACPhB,KDnDqB,gBCoDrBK,KACAX,UAAW,W,gCE3CJ,SAAS8C,EAAYC,GAClC,MAAMC,EAAWC,IAAW,iBAAkB,CAC5C,2BAA4BF,EAAMG,SAClC,uBAAwC,IAAhBH,EAAM7B,QAGhC,OACEiC,IAAAC,cAAA,MACEC,UAAWL,EACXM,QAASA,IAAMP,EAAMN,OAAOM,EAAMQ,MAClCC,cAAY,OAEZL,IAAAC,cAAA,MAAIC,UAAU,iBAAiBN,EAAMQ,MACrCJ,IAAAC,cAAA,MAAIC,UAAU,eAnBH,KADWI,EAoBmBV,EAAM7B,OAnB1B,qBACV,IAAXuC,EAAqB,mBAEnB,GAANrC,OAAUqC,EAAM,sBAJX,IAAqBA,ECDb,SAASC,EAAQX,GAC9B,MAAMvC,EAAOuC,EAAMvC,KAAKQ,IAAIT,GAExB4C,IAAAC,cAACN,EAAW,CACVa,IAAKpD,EAAII,GACT4C,KAAMhD,EAAIgD,KACVrC,MAAOX,EAAIW,MACXgC,SAAU3C,EAAIgD,OAASR,EAAMxC,IAC7BkC,OAAQM,EAAMN,UAKpB,OAAOU,IAAAC,cAAA,UAAK5C,G,MCfC,SAASoD,EAAOb,GAC7B,OACEI,IAAAC,cAAA,UAAQC,UAAU,qBAChBF,IAAAC,cAAA,MAAIC,UAAU,mBAAmBN,EAAMc,MACvCV,IAAAC,cAAA,MAAIC,UAAU,4BCJL,SAASS,EAAMf,GAC5B,OACEI,IAAAC,cAAA,QAAMC,UAAU,oBACdF,IAAAC,cAAA,OACEC,UAAU,0BACVU,IAAI,iBACJC,IAAI,MACJV,QAASP,EAAMkB,SCPR,SAASC,EAAKnB,GAC3B,OACEI,IAAAC,cAAA,QAAMC,UAAU,6CACdF,IAAAC,cAAA,WAASC,UAAU,0BACjBF,IAAAC,cAAA,MAAIC,UAAU,iBAAiBN,EAAMoB,SACrChB,IAAAC,cAAA,WAASC,UAAU,eACjBF,IAAAC,cAAA,MAAIC,UAAU,eAAc,eAC5BF,IAAAC,cAAA,MAAIC,UAAU,iBACXN,EAAM7C,aAAe6C,EAAM7C,YAAYqD,QAI9CJ,IAAAC,cAAA,WAASC,UAAU,2BACjBF,IAAAC,cAAA,WAASC,UAAU,wBACjBF,IAAAC,cAAA,OACEC,UAAU,8BACVU,IAAI,kBACJC,IAAI,OACJV,QAASP,EAAMqB,SAEjBjB,IAAAC,cAAA,OACEC,UAAU,8BACVU,IAAI,mBACJC,IAAI,SACJV,QAASP,EAAMsB,c,YCrBZ,SAASC,EAAgBvB,GACtC,MAAMwB,EAAYtB,IAAW,qBAAsB,CACjD,+BAAgCF,EAAMG,WAGxC,OACEC,IAAAC,cAAA,MAAIC,UAAWkB,EAAWjB,QAASP,EAAMyB,gBACvCrB,IAAAC,cAAA,OACEC,UAAU,2BACVU,IAAKhB,EAAM0B,OACXT,IAAKjB,EAAMQ,OAEZR,EAAMG,UAAYH,EAAMQ,MCchBmB,MA1Bf,SAAyB3B,GACvB,MAAM5C,EAAe4C,EAAM5C,aAAaa,IAAId,GAExCiD,IAAAC,cAACuB,EAAmB,CAClBhB,IAAKzD,EAAYS,GACjBA,GAAIT,EAAYS,GAChB4C,KAAMrD,EAAYqD,KAClBkB,OAAQvE,EAAYuE,OACpBvB,SAAUhD,EAAYS,KAAOoC,EAAM6B,MACnCJ,eAAgBpC,GAASW,EAAM8B,SAAS3E,EAAYS,OAK1D,OACEwC,IAAAC,cAAA,WAASC,UAAU,gBACjBF,IAAAC,cAAA,MAAIC,UAAU,oCAAmC,eACjDF,IAAAC,cAAA,MAAIC,UAAU,sBAAsBlD,K,MChB3B,SAAS2E,EAAO/B,GAC7B,MAAMgC,EAAc9B,IAAW,SAAU,CACvC,iBAAkBF,EAAMiC,OACxB,kBAAmBjC,EAAMkC,UAG3B,OACE9B,IAAAC,cAAA,UACEC,UAAW0B,EACXzB,QAASP,EAAMO,QACf4B,SAAUnC,EAAMmC,UAEfnC,EAAMoC,UCbE,SAASC,EAAKrC,GAC3B,MAAOQ,EAAM8B,GAAWC,mBAASvC,EAAMQ,MAAQ,KACxCrD,EAAasE,GAAkBc,mBAASvC,EAAM7C,aAAe,OAC7DqF,EAAOC,GAAYF,mBAAS,IAyBnC,OACEnC,IAAAC,cAAA,QAAMC,UAAU,+CACdF,IAAAC,cAAA,WAASC,UAAU,0BACjBF,IAAAC,cAAA,QAAMqC,aAAa,MAAMC,SAAUtD,GAASA,EAAMuD,kBAChDxC,IAAAC,cAAA,SACEC,UAAU,4CACVE,KAAK,OACLjD,KAAK,OACLsF,YAAY,qBACZhB,MAAOrB,EACPsB,SAAUzC,IACRiD,EAAQjD,EAAMyD,OAAOjB,QAEvBpB,cAAY,wBAGhBL,IAAAC,cAAA,WAASC,UAAU,2BAA2BkC,GAC9CpC,IAAAC,cAACsB,EAAe,CACdvE,aAAc4C,EAAM5C,aACpByE,MAAO1E,EACP2E,SAAUL,KAGdrB,IAAAC,cAAA,WAASC,UAAU,2BACjBF,IAAAC,cAAA,WAASC,UAAU,wBACjBF,IAAAC,cAAC0B,EAAM,CAACE,QAAM,EAAC1B,QA3CvB,WAJE+B,EAAQ,IACRb,EAAe,MAKfzB,EAAM+C,aAyCgC,UAGhC3C,IAAAC,cAAC0B,EAAM,CAACG,SAAO,EAAC3B,QAzCxB,WACe,KAATC,EAIgB,OAAhBrD,GAIJsF,EAAS,MACTzC,EAAMgD,OAAOxC,EAAMrD,IAJjBsF,EAAS,gCAJTA,EAAS,kCAuC8B,WC3D9B,SAASQ,EAAOjD,GAC7B,OACEI,IAAAC,cAAA,QAAMC,UAAU,+CACdF,IAAAC,cAAA,OACEC,UAAU,4BACVU,IAAI,oBACJC,IAAI,YAENb,IAAAC,cAAA,MAAIC,UAAU,mBAAmBN,EAAMkD,UCR9B,SAAS9E,EAAM4B,GAC5B,OACEI,IAAAC,cAAA,QAAMC,UAAU,8CACdF,IAAAC,cAAA,WAASC,UAAU,8BACjBF,IAAAC,cAAA,MAAIC,UAAU,mBAAkB,SAChCF,IAAAC,cAAA,MAAIC,UAAU,eAAeN,EAAMkD,UAErC9C,IAAAC,cAAA,OACEC,UAAU,2BACVU,IAAI,mBACJC,IAAI,QACJV,QAASP,EAAMmD,WCTR,SAASC,EAAQpD,GAC9B,OACEI,IAAAC,cAAA,QAAMC,UAAU,gDACdF,IAAAC,cAAA,MAAIC,UAAU,mBAAmBN,EAAMkD,SACvC9C,IAAAC,cAAA,WAASC,UAAU,wBACjBF,IAAAC,cAAC0B,EAAM,CAACE,QAAM,EAAC1B,QAASP,EAAM+C,UAAU,UAGxC3C,IAAAC,cAAC0B,EAAM,CAACE,QAAM,EAAC1B,QAASP,EAAMqD,WAAW,aC0FlCC,MA1Ff,SAAqBtD,GACnB,MASMuD,EAAcvD,EAAM/C,UARb,OADC,SAUR,KAAEuG,EAAI,WAAEC,EAAU,KAAEC,GCrBb,SAAuBC,GACpC,MAAOC,EAASC,GAActB,mBAAS,CAACoB,IAmBxC,MAAO,CACLH,KAAMI,EAAQA,EAAQ9F,OAAS,GAC/B2F,WAnBF,SAAoBK,GAA2B,IAAlBC,EAAOC,UAAAlG,OAAA,QAAAmG,IAAAD,UAAA,IAAAA,UAAA,GAEhCH,EADEE,EACSG,GAAQ,IAAIA,EAAKC,MAAM,EAAGD,EAAKpG,OAAS,GAAIgG,GAE5CI,GAAQ,IAAIA,EAAMJ,KAgB/BJ,KAZF,WACEG,EAAWK,GACLA,EAAKpG,OAAS,EACT,IAAIoG,EAAKC,MAAM,EAAGD,EAAKpG,OAAS,IAElC,IAAIoG,MDKoBE,CAAcb,GAEjD,SAASc,EAAK7D,EAAMrD,GAClB,MAAMF,EAAY,CAChBmE,QAASZ,EACTrD,eAGFsG,EAda,UAgBbzD,EACGL,cAAcK,EAAMpC,GAAIX,GACxB6B,KAAK,IAAM2E,EArBH,SAsBRa,MAAM9B,GAASiB,EAhBD,cAgBwB,IAW3C,OACErD,IAAAC,cAAA,WAASC,UAAU,cAAcG,cAAY,eAC3CL,IAAAC,cAACQ,EAAM,CAACC,KAAMd,EAAMc,OApCV,UAsCT0C,GAAkBpD,IAAAC,cAACU,EAAK,CAACG,MAAOA,IAAMuC,EApC5B,YADF,SAsCRD,GACCpD,IAAAC,cAACc,EAAI,CACHC,QAASpB,EAAM/C,UAAUmE,QACzBjE,YAAa6C,EAAM/C,UAAUE,YAC7BmE,SAAUA,IAAMmC,EArCR,WAsCRpC,OAAQA,IAAMoC,EAzCT,UADE,WA6CVD,GACCpD,IAAAC,cAACgC,EAAI,CACHjF,aAAc4C,EAAM5C,aACpB2F,SAAUW,EACVV,OAAQqB,IAhDH,SAmDRb,GACCpD,IAAAC,cAACgC,EAAI,CACH7B,KAAMR,EAAM/C,UAAUmE,QACtBjE,YAAa6C,EAAM/C,UAAUE,YAAYS,GACzCR,aAAc4C,EAAM5C,aACpB2F,SAAUW,EACVV,OAAQqB,IAxDD,WA2DVb,GAAmBpD,IAAAC,cAAC4C,EAAM,CAACC,QAAQ,WA1DvB,aA2DZM,GAAqBpD,IAAAC,cAAC4C,EAAM,CAACC,QAAQ,aA1D1B,YA2DXM,GACCpD,IAAAC,cAAC+C,EAAO,CACNF,QAAQ,yCACRH,SAAUW,EACVL,UA3CR,WACEI,EAtBe,YAsBM,GACrBzD,EACGH,gBAAgBG,EAAMpC,IACtBkB,KAAK,IAAM2E,EA9BF,UA+BTa,MAAM9B,GAASiB,EAvBC,gBAuBwB,OAxB1B,eAiEdD,GACCpD,IAAAC,cAACjC,EAAK,CAAC8E,QAAQ,8BAA8BC,QAASO,IAjEvC,iBAmEhBF,GACCpD,IAAAC,cAACjC,EAAK,CAAC8E,QAAQ,gCAAgCC,QAASO,ME1EjD,SAASa,EAAYvE,GAClC,MAAM,MACJhD,EAAK,OACL0C,EAAM,cACNC,EAAa,gBACbE,GACEvB,IAEElB,ElBfD,SAA+BJ,EAAOQ,GAC3C,MAAMgH,EAAQxH,EAAMS,KAAKgH,KAAKC,GAAKlH,IAAQkH,EAAElE,MAE7C,OAA0B,IAAtBxD,EAAMS,KAAKK,aAA0BmG,IAAVO,EAA4B,GAEpDA,EAAMpH,aAAaa,IAAIL,GAAMZ,EAAMI,aAAaQ,IkBUlC+G,CAAsB3H,EAAOA,EAAMQ,KAElDE,ElBzBD,SAA+BV,EAAOQ,GAC3C,MAAMgH,EAAQxH,EAAMS,KAAKgH,KAAKC,GAAKlH,IAAQkH,EAAElE,MAE7C,OAA0B,IAAtBxD,EAAMS,KAAKK,aAA0BmG,IAAVO,EAA4B,GAEpDA,EAAM9G,aAAaO,IAAIL,GAAMZ,EAAMU,aAAaE,IkBoBlCgH,CAAsB5H,EAAOA,EAAMQ,KAAKS,IAC3DN,GAEIyC,IAAAC,cAACiD,EAAWuB,OAAAC,OAAA,CACVlE,IAAKjD,EAAYC,IACbD,EAAW,CACfV,UAAWF,EAAaC,EAAOW,EAAYV,WAC3CG,aAAcA,EACduC,cAAeA,EACfE,gBAAiBA,MAMzB,OACEO,IAAAC,cAAA,QAAMC,UAAU,UACdF,IAAAC,cAAA,WAASC,UAAU,WACjBF,IAAAC,cAAA,OACEC,UAAU,oBACVU,IAAI,kBACJC,IAAI,wBAENb,IAAAC,cAAA,MAAIC,UAAU,yCACdF,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAACM,EAAO,CAAClD,KAAMT,EAAMS,KAAMD,IAAKR,EAAMQ,IAAKkC,OAAQA,KAErDU,IAAAC,cAAA,OACEC,UAAU,iCACVU,IAAI,iBACJC,IAAI,qBAGRb,IAAAC,cAAA,WAASC,UAAU,YAChB5C,EACD0C,IAAAC,cAACiD,EAAW,CAAC1C,IAAI,OAAOE,KAAK,UCnDjC3B,iKAAY4F,yBACdnG,IAAMoG,SAASC,QAAU9F,iKAAY4F,wBAGvCG,IAASC,OAAO/E,IAAAC,cAACkE,EAAW,MAAKa,SAASC,eAAe,W","file":"static/js/main.31364dac.chunk.js","sourcesContent":["export function getAppointmentsForDay(state, day) {\n  const found = state.days.find(d => day === d.name);\n\n  if (state.days.length === 0 || found === undefined) return [];\n\n  return found.appointments.map(id => state.appointments[id]);\n}\n\nexport function getInterviewersForDay(state, day) {\n  const found = state.days.find(d => day === d.name);\n\n  if (state.days.length === 0 || found === undefined) return [];\n\n  return found.interviewers.map(id => state.interviewers[id]);\n}\n\nexport function getInterview(state, interview) {\n  return (\n    interview && {\n      ...interview,\n      interviewer: state.interviewers[interview.interviewer]\n    }\n  );\n}\n","export const SET_DAY = \"SET_DAY\";\nexport const SET_APPLICATION_DATA = \"SET_APPLICATION_DATA\";\nexport const SET_INTERVIEW = \"SET_INTERVIEW\";\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case SET_DAY:\n      return { ...state, day: action.day };\n    case SET_APPLICATION_DATA:\n      return {\n        ...state,\n        days: action.days,\n        appointments: action.appointments,\n        interviewers: action.interviewers\n      };\n    case SET_INTERVIEW: {\n      const appointment = {\n        ...state.appointments[action.id],\n        interview: action.interview && { ...action.interview }\n      };\n\n      const appointments = {\n        ...state.appointments,\n        [action.id]: appointment\n      };\n\n      const getSpotsForDay = day =>\n        day.appointments.length -\n        day.appointments.reduce(\n          (count, id) => (appointments[id].interview ? count + 1 : count),\n          0\n        );\n\n      const days = state.days.map(day => {\n        return day.appointments.includes(action.id)\n          ? {\n              ...day,\n              spots: getSpotsForDay(day)\n            }\n          : day;\n      });\n\n      return {\n        ...state,\n        appointments,\n        days\n      };\n    }\n    default:\n      throw new Error(\n        `Tried to reduce with unsupported action type: ${action.type}`\n      );\n  }\n}\n","import { useReducer, useEffect } from \"react\";\n\nimport axios from \"axios\";\n\nimport reducer, {\n  SET_DAY,\n  SET_APPLICATION_DATA,\n  SET_INTERVIEW\n} from \"reducers/application\";\n\nimport useRealTimeUpdate from \"hooks/useRealtimeUpdate\";\n\nexport default function useApplicationData() {\n  const [state, dispatch] = useReducer(reducer, {\n    day: \"Monday\",\n    days: [],\n    appointments: {},\n    interviewers: {}\n  });\n\n  const setDay = day => dispatch({ type: SET_DAY, day });\n\n  useEffect(() => {\n    Promise.all([\n      axios.get(\"/api/days\"),\n      axios.get(\"/api/appointments\"),\n      axios.get(\"/api/interviewers\")\n    ]).then(\n      ([{ data: days }, { data: appointments }, { data: interviewers }]) =>\n        dispatch({\n          type: SET_APPLICATION_DATA,\n          days,\n          appointments,\n          interviewers\n        })\n    );\n  }, []);\n\n  useRealTimeUpdate(dispatch);\n\n  function bookInterview(id, interview) {\n    return axios.put(`/api/appointments/${id}`, { interview }).then(() => {\n      dispatch({\n        type: SET_INTERVIEW,\n        id,\n        interview\n      });\n    });\n  }\n\n  function cancelInterview(id) {\n    return axios.delete(`/api/appointments/${id}`).then(() => {\n      dispatch({\n        type: SET_INTERVIEW,\n        id,\n        interview: null\n      });\n    });\n  }\n\n  return {\n    state,\n    setDay,\n    bookInterview,\n    cancelInterview\n  };\n}\n","import { useEffect } from \"react\";\nimport { SET_INTERVIEW } from \"reducers/application\";\n\nexport default function useRealtimeUpdate(dispatch) {\n  useEffect(() => {\n    const socket = new WebSocket(process.env.REACT_APP_WEBSOCKET_URL);\n\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n\n      if (typeof data === \"object\" && data.type === SET_INTERVIEW) {\n        dispatch(data);\n      }\n    };\n\n    return () => {\n      socket.close();\n    };\n  }, [dispatch]);\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\n\nimport \"components/DayListItem.scss\";\n\nexport function formatSpots(number) {\n  if (number === 0) return \"no spots remaining\";\n  if (number === 1) return \"1 spot remaining\";\n\n  return `${number} spots remaining`;\n}\n\nexport default function DayListItem(props) {\n  const dayClass = classnames(\"day-list__item\", {\n    \"day-list__item--selected\": props.selected,\n    \"day-list__item--full\": props.spots === 0\n  });\n\n  return (\n    <li\n      className={dayClass}\n      onClick={() => props.setDay(props.name)}\n      data-testid=\"day\"\n    >\n      <h2 className=\"text--regular\">{props.name}</h2>\n      <h3 className=\"text--light\">{formatSpots(props.spots)}</h3>\n    </li>\n  );\n}\n","import React from \"react\";\n\nimport DayListItem from \"components/DayListItem\";\n\nexport default function DayList(props) {\n  const days = props.days.map(day => {\n    return (\n      <DayListItem\n        key={day.id}\n        name={day.name}\n        spots={day.spots}\n        selected={day.name === props.day}\n        setDay={props.setDay}\n      />\n    );\n  });\n\n  return <ul>{days}</ul>;\n}\n","import React from \"react\";\n\nexport default function Header(props) {\n  return (\n    <header className=\"appointment__time\">\n      <h4 className=\"text--semi-bold\">{props.time}</h4>\n      <hr className=\"appointment__separator\" />\n    </header>\n  );\n}\n","import React from \"react\";\n\nexport default function Empty(props) {\n  return (\n    <main className=\"appointment__add\">\n      <img\n        className=\"appointment__add-button\"\n        src=\"images/add.png\"\n        alt=\"Add\"\n        onClick={props.onAdd}\n      />\n    </main>\n  );\n}\n","import React from \"react\";\n\nexport default function Show(props) {\n  return (\n    <main className=\"appointment__card appointment__card--show\">\n      <section className=\"appointment__card-left\">\n        <h2 className=\"text--regular\">{props.student}</h2>\n        <section className=\"interviewer\">\n          <h4 className=\"text--light\">Interviewer</h4>\n          <h3 className=\"text--regular\">\n            {props.interviewer && props.interviewer.name}\n          </h3>\n        </section>\n      </section>\n      <section className=\"appointment__card-right\">\n        <section className=\"appointment__actions\">\n          <img\n            className=\"appointment__actions-button\"\n            src=\"images/edit.png\"\n            alt=\"Edit\"\n            onClick={props.onEdit}\n          />\n          <img\n            className=\"appointment__actions-button\"\n            src=\"images/trash.png\"\n            alt=\"Delete\"\n            onClick={props.onDelete}\n          />\n        </section>\n      </section>\n    </main>\n  );\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\n\nimport \"components/InterviewerListItem.scss\";\n\nexport default function InterviewerItem(props) {\n  const itemClass = classnames(\"interviewers__item\", {\n    \"interviewers__item--selected\": props.selected\n  });\n\n  return (\n    <li className={itemClass} onClick={props.setInterviewer}>\n      <img\n        className=\"interviewers__item-image\"\n        src={props.avatar}\n        alt={props.name}\n      />\n      {props.selected && props.name}\n    </li>\n  );\n}\n","import React from \"react\";\nimport \"components/InterviewerList.scss\";\nimport InterviewerListItem from \"components/InterviewerListItem\";\nimport PropTypes from \"prop-types\";\n\nfunction InterviewerList(props) {\n  const interviewers = props.interviewers.map(interviewer => {\n    return (\n      <InterviewerListItem\n        key={interviewer.id}\n        id={interviewer.id}\n        name={interviewer.name}\n        avatar={interviewer.avatar}\n        selected={interviewer.id === props.value}\n        setInterviewer={event => props.onChange(interviewer.id)}\n      />\n    );\n  });\n\n  return (\n    <section className=\"interviewers\">\n      <h4 className=\"interviewers__header text--light\">Interviewer</h4>\n      <ul className=\"interviewers__list\">{interviewers}</ul>\n    </section>\n  );\n}\n\nInterviewerList.propTypes = {\n  interviewers: PropTypes.array.isRequired\n}\n\nexport default InterviewerList;\n","import React from \"react\";\n\nimport classnames from \"classnames\";\n\nimport \"components/Button.scss\";\n\nexport default function Button(props) {\n  const buttonClass = classnames(\"button\", {\n    \"button--danger\": props.danger,\n    \"button--confirm\": props.confirm\n  });\n\n  return (\n    <button\n      className={buttonClass}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport InterviewerList from \"components/InterviewerList\";\nimport Button from \"components/Button\";\n\nexport default function Form(props) {\n  const [name, setName] = useState(props.name || \"\");\n  const [interviewer, setInterviewer] = useState(props.interviewer || null);\n  const [error, setError] = useState(\"\");\n\n  function reset() {\n    setName(\"\");\n    setInterviewer(null);\n  }\n\n  function cancel() {\n    reset();\n    props.onCancel();\n  }\n\n  function validate() {\n    if (name === \"\") {\n      setError(\"Student name cannot be blank\");\n      return;\n    }\n    if (interviewer === null) {\n      setError(\"Please select an interviewer\");\n      return;\n    }\n    setError(null);\n    props.onSave(name, interviewer);\n  }\n\n  return (\n    <main className=\"appointment__card appointment__card--create\">\n      <section className=\"appointment__card-left\">\n        <form autoComplete=\"off\" onSubmit={event => event.preventDefault()}>\n          <input\n            className=\"appointment__create-input text--semi-bold\"\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Enter Student Name\"\n            value={name}\n            onChange={event => {\n              setName(event.target.value);\n            }}\n            data-testid=\"student-name-input\"\n          />\n        </form>\n        <section className=\"appointment__validation\">{error}</section>\n        <InterviewerList\n          interviewers={props.interviewers}\n          value={interviewer}\n          onChange={setInterviewer}\n        />\n      </section>\n      <section className=\"appointment__card-right\">\n        <section className=\"appointment__actions\">\n          <Button danger onClick={cancel}>\n            Cancel\n          </Button>\n          <Button confirm onClick={validate}>\n            Save\n          </Button>\n        </section>\n      </section>\n    </main>\n  );\n}\n","import React from \"react\";\n\nexport default function Status(props) {\n  return (\n    <main className=\"appointment__card appointment__card--status\">\n      <img\n        className=\"appointment__status-image\"\n        src=\"images/status.png\"\n        alt=\"Loading\"\n      />\n      <h1 className=\"text--semi-bold\">{props.message}</h1>\n    </main>\n  );\n}\n","import React from \"react\";\n\nexport default function Error(props) {\n  return (\n    <main className=\"appointment__card appointment__card--error\">\n      <section className=\"appointment__error-message\">\n        <h1 className=\"text--semi-bold\">Error</h1>\n        <h3 className=\"text--light\">{props.message}</h3>\n      </section>\n      <img\n        className=\"appointment__error-close\"\n        src=\"images/close.png\"\n        alt=\"Close\"\n        onClick={props.onClose}\n      />\n    </main>\n  );\n}\n","import React from \"react\";\n\nimport Button from \"components/Button\";\n\nexport default function Confirm(props) {\n  return (\n    <main className=\"appointment__card appointment__card--confirm\">\n      <h1 className=\"text--semi-bold\">{props.message}</h1>\n      <section className=\"appointment__actions\">\n        <Button danger onClick={props.onCancel}>\n          Cancel\n        </Button>\n        <Button danger onClick={props.onConfirm}>\n          Confirm\n        </Button>\n      </section>\n    </main>\n  );\n}\n","import React from \"react\";\nimport \"components/Appointment/styles.scss\";\nimport Header from \"./Header\";\nimport Empty from \"./Empty\";\nimport Show from \"./Show\";\nimport Form from \"./Form\";\nimport Status from \"./Status\";\nimport Error from \"./Error\";\nimport Confirm from \"./Confirm\";\nimport useVisualMode from \"hooks/useVisualMode\";\nimport PropTypes from \"prop-types\";\n\nfunction Appointment(props) {\n  const EMPTY = \"EMPTY\";\n  const SHOW = \"SHOW\";\n  const CREATE = \"CREATE\";\n  const EDIT = \"EDIT\";\n  const SAVING = \"SAVING\";\n  const DELETING = \"DELETING\";\n  const CONFIRM = \"CONFIRM\";\n  const ERROR_SAVE = \"ERROR_SAVE\";\n  const ERROR_DELETE = \"ERROR_DELETE\";\n  const initialMode = props.interview ? SHOW : EMPTY;\n  const { mode, transition, back } = useVisualMode(initialMode);\n\n  function save(name, interviewer) {\n    const interview = {\n      student: name,\n      interviewer\n    };\n\n    transition(SAVING);\n  \n    props\n      .bookInterview(props.id, interview)\n      .then(() => transition(SHOW))\n      .catch(error => transition(ERROR_SAVE, true));\n  }\n  \n  function destroy() {\n    transition(DELETING, true);\n    props\n      .cancelInterview(props.id)\n      .then(() => transition(EMPTY))\n      .catch(error => transition(ERROR_DELETE, true));\n  }\n\n  return (\n    <article className=\"appointment\" data-testid=\"appointment\">\n      <Header time={props.time} />\n\n      {mode === EMPTY && <Empty onAdd={() => transition(CREATE)} />}\n      {mode === SHOW && (\n        <Show \n          student={props.interview.student}\n          interviewer={props.interview.interviewer}\n          onDelete={() => transition(CONFIRM)}\n          onEdit={() => transition(EDIT)}\n        />\n      )}\n      {mode === CREATE && (\n        <Form \n          interviewers={props.interviewers} \n          onCancel={back} \n          onSave={save} \n        />\n      )}\n      {mode === EDIT && (\n        <Form\n          name={props.interview.student}\n          interviewer={props.interview.interviewer.id}\n          interviewers={props.interviewers}\n          onCancel={back}\n          onSave={save}\n        />\n      )}\n      {mode === SAVING && <Status message=\"Saving\" />}\n      {mode === DELETING && <Status message=\"Deleting\" />}\n      {mode === CONFIRM && (\n        <Confirm\n          message=\"Are you sure you would like to delete?\"\n          onCancel={back}\n          onConfirm={destroy}\n        />\n      )}\n      {mode === ERROR_SAVE && (\n        <Error message=\"Could not book appointment.\" onClose={back} />\n      )}\n      {mode === ERROR_DELETE && (\n        <Error message=\"Could not cancel appointment.\" onClose={back} />\n      )}\n\n\n    </article>\n  );\n}\n\n// ROD TEST\n// Appointment.propTypes = {\n//   id: PropTypes.number.isRequired\n// }\n\nexport default Appointment;","import { useState } from \"react\";\n\nexport default function useVisualMode(initial) {\n  const [history, setHistory] = useState([initial]); \n\n  function transition(newMode, replace = false) {\n    if (replace) {\n      setHistory(prev => [...prev.slice(0, prev.length - 1), newMode]);\n    } else {\n      setHistory(prev => [...prev, newMode]);\n    }\n  };\n\n  function back() {\n    setHistory(prev => {\n      if (prev.length > 1) {\n        return [...prev.slice(0, prev.length - 1)];\n      }\n      return [...prev];\n    });\n  };\n\n  return { \n    mode: history[history.length - 1], \n    transition, \n    back,\n  };\n}\n","import React from \"react\";\n\nimport {\n  getAppointmentsForDay,\n  getInterviewersForDay,\n  getInterview\n} from \"helpers/selectors\";\n\nimport useApplicationData from \"hooks/useApplicationData\";\n\nimport \"components/Application.scss\";\n\nimport DayList from \"components/DayList\";\nimport Appointment from \"components/Appointment\";\n\nexport default function Application(props) {\n  const {\n    state,\n    setDay,\n    bookInterview,\n    cancelInterview\n  } = useApplicationData();\n\n  const interviewers = getInterviewersForDay(state, state.day);\n\n  const appointments = getAppointmentsForDay(state, state.day).map(\n    appointment => {\n      return (\n        <Appointment\n          key={appointment.id}\n          {...appointment}\n          interview={getInterview(state, appointment.interview)}\n          interviewers={interviewers}\n          bookInterview={bookInterview}\n          cancelInterview={cancelInterview}\n        />\n      );\n    }\n  );\n\n  return (\n    <main className=\"layout\">\n      <section className=\"sidebar\">\n        <img\n          className=\"sidebar--centered\"\n          src=\"images/logo.png\"\n          alt=\"Interview Scheduler\"\n        />\n        <hr className=\"sidebar__separator sidebar--centered\" />\n        <nav className=\"sidebar__menu\">\n          <DayList days={state.days} day={state.day} setDay={setDay} />\n        </nav>\n        <img\n          className=\"sidebar__lhl sidebar--centered\"\n          src=\"images/lhl.png\"\n          alt=\"Lighthouse Labs\"\n        />\n      </section>\n      <section className=\"schedule\">\n        {appointments}\n        <Appointment key=\"last\" time=\"5pm\" />\n      </section>\n    </main>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"index.scss\";\n\nimport Application from \"components/Application\";\n\nimport axios from \"axios\";\n\nif (process.env.REACT_APP_API_BASE_URL) {\n  axios.defaults.baseURL = process.env.REACT_APP_API_BASE_URL;\n}\n\nReactDOM.render(<Application />, document.getElementById(\"root\"));\n"],"sourceRoot":""}